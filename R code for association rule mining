# R code for association rule mining
# Install required packages
install.packages("arules")     # Association rule algorithm
install.packages("arulesViz")  # Association rule visualization

# Install data processing and plotting packages (if not installed)
install.packages("dplyr")      # Data cleaning and transformation
install.packages("ggplot2")    # Advanced data visualization

# Load necessary libraries
library(arules)     # Association rule mining
library(arulesViz)  # Association rule visualization
library(dplyr)      # Data manipulation
library(ggplot2)    # Advanced plotting

# Set working directory (modify according to your actual path)
setwd("your/project/path")

# 1. Define transaction data (replace with your actual dataset)
transaction_list <- list(
  c("item1", "item2", "item3"),  # Example transaction 1
  c("item2", "item4"),           # Example transaction 2
  # Add more transactions as needed
)

# 2. Convert to transaction object supported by arules
transactions <- as(transaction_list, "transactions")

# 3. Mine association rules using Apriori algorithm
# Adjust parameters (support, confidence, min length) based on your needs
rules <- apriori(
  transactions,
  parameter = list(
    support = 0.2,       # Minimum support threshold (20%)
    confidence = 0.5,    # Minimum confidence threshold (50%)
    minlen = 2           # Minimum rule length (2 items)
  )
)

# 4. Inspect and visualize the results
inspect(rules)  # Display all generated rules in console

# Basic visualization of rules
plot(rules)

# Graph-based visualization (requires igraph package)
plot(rules, method = "graph")

# 5. Export rules to a CSV file for further analysis
# Convert rules to data frame
rules_dataframe <- as(rules, "data.frame")

# Add rule ID column (optional but recommended for referencing)
rules_dataframe$rule_id <- 1:nrow(rules_dataframe)

# Specify output path
output_path <- "all_association_rules.csv"

# Save to CSV (no row names)
write.csv(rules_dataframe, file = output_path, row.names = FALSE)
